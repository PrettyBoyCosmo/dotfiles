# ~/.xonshrc
# xonsh rc file
# created by cosmo

# imports
import os
import socket
import subprocess

# constants
HOME = '/home/bluecosmo'
NOTEBOOK = f'{HOME}/notebook'
WORKFLOW = f'{HOME}/workflow'
DOWNLOADS = f'{HOME}/Downloads'
WALLPAPER_DIR = f'{HOME}/media/photos/wallpapers'

# custom prompt
$PROMPT = "{WHITE}┌[{GREEN}{user}{WHITE}@{GREEN}{hostname}{WHITE}]─[{INTENSE_BLUE}{cwd}{WHITE}]\n└──■ {BLUE}{curr_branch} {INTENSE_BLACK}$ "

# get working directory
def pwd():
    return os.getcwd()

# get output from system command
def command_output(command):
    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    return result.stdout.strip()

# animated-wallpaper
def animated_wallpaper(wp):
    os.system(f'bash /home/bluecosmo/media/photos/wallpapers/animated-wallpaper.sh /home/bluecosmo/media/photos/wallpapers/{wp[0]}')

# get local ip address (ipv4)
def local_ip():
    try:
        temp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        temp_socket.connect(("8.8.8.8", 80))  
        local_ip = temp_socket.getsockname()[0] 
        temp_socket.close()
        return local_ip
    except socket.error:
        return "Unable to retrieve local IP address"

# set wallpaper (wp)
def set_wallpaper(filename):
    wallpaper = filename[0]
    for root, dirs, files in os.walk(WALLPAPER_DIR):
        for file in files:
            name, ext = os.path.splitext(file)
            if name == wallpaper:
                os.system(f'feh --bg-fill {WALLPAPER_DIR}/{file}')
    return None

# backup dotfiles (bdots)
def backup_dot_files(destination_dir):
    file_paths = (
        '$HOME/.config/i3',
        '$HOME/.config/terminator',
        '$HOME/.config/nvim',
        '$HOME/.config/compton',
        '$HOME/.config/polybar',
        '$HOME/.config/rofi',
        '$HOME/.xonshrc',
        '$HOME/.bash_aliases',
        '$HOME/.bashrc',
    )
    destination_path = '$HOME/workflow/dotfiles'

    for file_path in file_paths:
        os.system(f'cp -r {file_path} {destination_path}')

# monitor mode (monitor_mode)
def monitor_mode(adapter):
    os.system('sudo airmon-ng check kill')
    os.system(f'sudo airmon-ng start {adapter}')

# managed mode (managed_mode)
def managed_mode(adapter):
    os.system(f'sudo airmon-ng stop {adapter}')
    os.system('sudo NetworkManager && sudo wpa_supplicant')

# change mac address (change_mac)
def change_mac(adapter):
    os.system(f'sudo ifconfig {adapter} down')
    os.system(f'sudo macchanger -r {adapter}')
    os.system(f'sudo ifconfig {adapter} up')

# git (main)
def mnupdate(commit_message):
    os.system('cd .')
    os.system('git fetch')
    os.system('git pull origin main')
    os.system('git add .')
    os.system(f'git commit -m "{commit_message}"')
    os.system('git push -u origin main')

# git (master)
def msupdate(commit_message):
    os.system('cd .')
    os.system('git fetch')
    os.system('git pull origin master')
    os.system('git add .')
    os.system(f'git commit -m "{commit_message}"')
    os.system('git push -u origin master')

# add git token to repo (add_token)
def add_token(github_path):
    git_token = command_output('pass tokens/git')
    os.system('cd .')
    os.system('git branch -M main')
    os.system('git remote remove origin')
    os.system(f'git remote add origin https://{git_token}@github.com/{github_path[0]}')

# modify path (environment variable)
for new_path in [
    '/home/bluecosmo/.nimble/bin'
    ]:
    $PATH.insert(0, new_path)

# aliases
aliases.update({
    'vim':'nvim',
    'poc':'echo @($args)',
    'path_of': 'echo @(pwd())/@($arg0)',
    'doop': 'bash -c terminator --working-directory=@(pwd())',
    'nvim': '$HOME/workflow/tools/nvim.appimage',
    'vim': '$HOME/workflow/tools/nvim.appimage',
    'll': 'ls -l',
    'la': 'ls -a',
    'lla': 'ls -la',
    'ugrade': 'sudo apt-get update -y && sudo apt-get upgrade -y && sudo apt autoremove',
    'pfchangs': 'proxychains4',
    'acf': 'auto-cpufreq --stats',
    'pin': 'mv @($arg0) @(NOTEBOOK)',
    'unpin': 'cp @(NOTEBOOK)/@($arg0) $HOME/Downloads',
    'rip': 'mv @(NOTEBOOK) @(pwd())',
    'analyze': 'mv @($arg0) $HOME/research/analyze',
    'anal': 'cd $HOME/research/analyze',
    'neo': f'neofetch --ascii {WORKFLOW}/system/planet-cosmo.ascii --ascii_colors 255 30 --colors 30 255 255 30 255 80',
    'wp': set_wallpaper,
    'stream_display': 'xrandr --output eDP-1 --mode 1920x1080',
    'mobile_display': 'xrandr --output eDP-1 --mode 1080x1920',
    'mvcon': 'mullvad connect',
    'mvdis': 'mullvad disconnect',
    'pccon': 'ssh bluecosmo@planetcosmo',
    'gitcon': 'ssh git@planetcosmo',
    'webserv': 'python3 -m http.server 8080',
    'monitor_mode': monitor_mode,
    'managed_mode': managed_mode,
    'change_mac': change_mac,
    'moon': 'ssh secdev@moon -p 69',
    'thmcon': f'sudo openvpn {WORKFLOW}/vpn/BlueCosmo.ovpn',
    'bbcon': 'ssh root@172.16.64.1',
    'sjcon': 'ssh root@172.16.24.1',
    'wpcon': 'ssh root@172.16.42.1',
    'ltcon': 'ssh root@172.16.84.1',
    'pscon': 'ssh root@172.16.32.1',
    'start': 'xdg-open @($arg0)',
    'ccs': 'xdg-open https://www.cosmodiumcs.com',
    'yt': 'xdg-open https://www.youtube.com/c/CosmodiumCS',
    'ff': 'firefox',
    'note': f'nvim {NOTEBOOK}/@($arg0)',
    'mnupdate': mnupdate,
    'msupdate': msupdate,
    'fuck': 'rm -rf',
    'please': 'sudo',
    'addtoken': add_token,
    'ei3': 'nvim /home/bluecosmo/.config/i3/config',
    'ci3': 'cat /home/bluecosmo/.config/i3/config',
    'evim': 'nvim /home/bluecosmo/.config/nvim/init.lua',
    'cvim': 'cat /home/bluecosmo/.config/nvim/init.lua',
    'eblocks': 'nvim /home/bluecosmo/.config/i3/i3blocks.conf',
    'cblocks': 'cat /home/bluecosmo/.config/i3/i3blocks.conf',
    'exonsh': 'nvim /home/bluecosmo/.xonshrc',
    'cxonsh': 'cat /home/bluecosmo/.xonshrc',
    'epol': 'nvim $HOME/.config/polybar/config.ini',
    'cpol': 'cat $HOME/.config/polybar/config.ini',
    'ecomp': 'nvim $HOME/.config/compton/compton.conf',
    'ccomp': 'cat $HOME/.config/compton/compton.conf',
    'elias': 'nvim /home/bluecosmo/.bash_aliases',
    'clias': 'cat /home/bluecosmo/.bash_aliases',
    'ehosts': 'sudo nvim /etc/hosts',
    'chosts': 'cat /etc/hosts',
    'untar': 'tar -xf *.tar.xz',
    'move': 'mv $HOME/Downloads/* @(pwd())',
    'movex': 'mv $HOME/Downloads/*.@($arg0) @(pwd())',
    'deport': 'mv $HOME/Downloads/* $HOME/imports',
    'lsx': 'ls *.@($arg0)',
    'add_license': f'cp {NOTEBOOK}/LICENSE.md ./LICENSE',
    'bak': 'cp @($arg0) @($arg0).bak',
    'trash': 'mv @($arg0) $HOME/local/share/Trash/files',
    'bin': 'cd $HOME/local/share/Trash/files',
    'education': 'cd /home/bluecosmo/education',
    'edu': 'cd /home/bluecosmo/education',
    'research': 'cd /home/bluecosmo/research',
    'res': 'cd /home/bluecosmo/research',
    'development': 'cd /home/bluecosmo/development',
    'dev': 'cd /home/bluecosmo/development',
    'workflow': 'cd /home/bluecosmo/workflow',
    'mal': 'cd /home/bluecosmo/development/malware-projects',
    'payloads': 'cd /home/bluecosmo/development/payloads',
    'pay': 'cd /home/bluecosmo/development/payloads',
    'work': 'cd /home/bluecosmo/workflow',
    'dots': 'cd /home/bluecosmo/workflow/dotfiles',
    'bdots': backup_dot_files,
    'packs': 'cd /home/bluecosmo/workflow/packages',
    'notebook': 'cd /home/bluecosmo/notebook',
    'nb': 'cd /home/bluecosmo/notebook',
    'wargames': 'cd /home/bluecosmo/research/wargames',
    'koth': 'cd /home/bluecosmo/research/wargames/koth',
    'bug': 'cd /home/bluecosmo/research/bugbounty',
    'media': 'cd /home/bluecosmo/media',
    'torload': 'cd $HOME/.local/share/torbrowser/tbb/x86_64/tor-browser_en-US/Browser/Downloads',
    'school': 'cd /home/bluecosmo/workflow/school',
    'downloads': 'cd /home/bluecosmo/Downloads',
    'down': 'cd /home/bluecosmo/Downloads',
    'imports': 'cd /home/bluecosmo/imports',
    'clients': 'cd /home/bluecosmo/development/clients',
    'reconnaissance': 'cd /home/bluecosmo/research/operations',
    'recon': 'cd /home/bluecosmo/research/operations',
    'operations': 'cd /home/bluecosmo/research/operations',
    'ops': 'cd /home/bluecosmo/research/operations',
    'tools': 'cd /home/bluecosmo/workflow/tools',
    'config': 'cd /home/bluecosmo/.config',
    'conf': 'cd /home/bluecosmo/.config',
    'comelf': 'g++ main.cpp && ./a.out',
    'comexe': '/usr/bin/x86_64-w64-mingw32-gcc-win32 main.c',
    'comdll': '/usr/bin/x86_64-w64-mingw32-gcc-win32 dll.c -o a.dll -shared',
    'runpm': 'npm install && npm run dev',
    'sjupload': 'scp -r payload.sh root@172.16.24.1:/root/payload',
    'duckencode': 'python2 /home/bluecosmo/development/hak5/rubberducky/encoder/duckencoder.py -i payload.txt',
    'onlyrat': 'python3 /home/bluecosmo/.OnlyRAT/main.py',
    'key': 'python3 ~/.SkeletonKey/main.py',   
    'wpls': f'ls {WALLPAPER_DIR}',
    'rng': 'ranger',
    'ipv4': local_ip,
    'ipv': local_ip,
    'gen_frames': 'bash /home/bluecosmo/media/photos/wallpapers/generate-frames.sh',
    'wp_animated': animated_wallpaper,
})
